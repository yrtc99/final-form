{
  "tags": [],
  "description": "了解算術、邏輯、比較、賦值運算子的用法",
  "title": "運算子",
  "image": "https://pngimg.com/uploads/calculator/calculator_PNG7937.png",
  "id": "operator",
  "difficulty": "beginner",
  "lessons": [
    {
      "tutorial": [],
      "content": "## 1. 算術運算子（+, -, *, /）教學\n\n算術運算子用於數值計算，可以做加、減、乘、除。  \n以下範例示範不同運算：\n\n```python\n# 加法：兩位玩家合併金幣\ngold_player1 = 120\ngold_player2 = 180\ntotal_gold = gold_player1 + gold_player2\nprint(\"總金幣：\", total_gold)\n# 輸出：總金幣： 300\n\n# 減法：電池剩餘電量\nfull_battery = 100\nused = 30\nremaining = full_battery - used\nprint(\"剩餘電量：\", remaining, \"%\")\n# 輸出：剩餘電量： 70 %\n\n# 乘法：箱子內水果總數\nboxes = 4\nfruits_per_box = 12\ntotal_fruits = boxes * fruits_per_box\nprint(\"總水果數：\", total_fruits)\n# 輸出：總水果數： 48\n\n# 除法：三人平分糖果\ncandies = 25\npeople = 3\neach = candies / people\nprint(\"每人分到：\", each, \"顆\")\n# 輸出：每人分到： 8.333333333333334 顆\n",
      "experience": 100,
      "pythonExercise": {
        "initialCode": "#一份雞排 70 元、一杯珍奶 55 元，請幫兩人平分。\n#提示：總金額後除以 2。\n\n\n\n# 總價 135 元，付款 200 元，請計算找零。\n# 提示：用 `付款金額 - 消費金額`。",
        "title": "點餐計算機：誰付錢？",
        "id": "operator1",
        "description": "🍔 一份雞排 70 元、一杯珍奶 55 元，請幫兩人平分。\n\n🔍 提示：總金額後除以 2。"
      },
      "skills": [
        {
          "name": "New Skill",
          "points": 50
        }
      ],
      "type": "python-exercise",
      "title": "算術運算子",
      "id": "operator-l1",
      "description": "算術運算子用於數值計算，可以做加、減、乘、除。"
    },
    {
      "tutorial": [],
      "content": "比較運算子用於判斷兩個值之間的關係，回傳布林值 True 或 False。\n以下範例示範常見比較：\n\n```python\n# 小明與小華的年齡比較\nage_xiaoming = 22\nage_xiaohua  = 25\nprint(\"小明比較小華年紀小嗎？\", age_xiaoming < age_xiaohua)\n# 輸出：True\n\n# 比較分數是否及格\nscore = 59\nprint(\"分數是否及格（>= 60）？\", score >= 60)\n# 輸出：False\n\n# 字串相等與不等\nanswer = \"魔法\"\nprint(\"答案是否正確？\", answer == \"魔法\")\nprint(\"答案是否不正確？\", answer != \"科學\")\n# 輸出：\n# 答案是否正確？ True\n# 答案是否不正確？ True\n\n```",
      "experience": 100,
      "pythonExercise": {
        "description": "利用以下三題練習~",
        "id": "operator2",
        "initialCode": "# 價格比較器：哪個便宜？\n# A 果汁 28 元、B 果汁 35 元，哪個比較便宜？\n\n# 提示：使用 `<` 比較兩個變數。\n\n\n# 真的比較高嗎？\n# 阿哲 168 公分，阿婷 167.5 公分。請印出\"阿哲比阿婷高嗎？True / False\"\n\n# 提示：使用 `>` 比較數字。\n\n# 給分系統設計\n# 若成績是 78 分，請判斷是否及格（≧60）。\n\n# 提示：使用 `>=` 比較運算子。\n",
        "title": "練習比較運算子"
      },
      "type": "python-exercise",
      "title": "比較運算子",
      "id": "operator-l2",
      "skills": [
        {
          "points": 50,
          "name": "New Skill"
        }
      ],
      "description": "比較運算子用於判斷兩個值之間的關係，回傳布林值 True 或 False。"
    },
    {
      "tutorial": [],
      "description": "邏輯運算子用於組合多個布林條件",
      "type": "python-exercise",
      "title": "邏輯運算子",
      "experience": 100,
      "id": "operator-l3",
      "content": "邏輯運算子（and, or, not）教學\n邏輯運算子用於組合多個布林條件：\n\nand：所有條件都需為 True\n\nor ：任一條件為 True 即回傳 True\n\nnot: 取反\n\n```python\n# 解鎖條件：有鑰匙且知道密碼\nhas_key      = True\nknows_passwd = False\ncan_unlock = has_key and knows_passwd\nprint(\"能解鎖嗎？\", can_unlock)\n# 輸出：能解鎖嗎？ False\n\n# 旅遊預算：有機票或有旅行社贊助\nhas_ticket = False\nsponsored  = True\ncan_travel = has_ticket or sponsored\nprint(\"能去旅行嗎？\", can_travel)\n# 輸出：能去旅行嗎？ True\n\n# 取反示例\nis_raining = False\nprint(\"不是在下雨嗎？\", not is_raining)\n# 輸出：True\n\n```",
      "skills": [
        {
          "name": "New Skill",
          "points": 50
        }
      ],
      "pythonExercise": {
        "description": "利用以下2題練習邏輯運算子~",
        "id": "operator3",
        "initialCode": "# 作業完成且房間整齊才能玩電動。\n# 作業完成 = True, 房間整齊 = False\n# 提示：使用 `and` 判斷兩條件都符合。\n\n\n# 有傘或天氣好才能出門。\n# 天氣晴 = False, 有帶傘 = True\n",
        "title": "練習邏輯運算子"
      }
    },
    {
      "tutorial": [],
      "experience": 100,
      "title": "賦值運算子",
      "pythonExercise": {
        "id": "operator4",
        "initialCode": "# Q1. 每喝一杯水就加一，今天喝了三杯。print喝幾杯水\n\n\n# Q2. 初始能量 100，每使用技能 -15，使用三次。\n# 提示：可使用 `energy -= 15` 多次。print三次後的能量",
        "description": "利用以下2題練習~~",
        "title": "練習賦值運算子"
      },
      "type": "python-exercise",
      "skills": [
        {
          "points": 50,
          "name": "New Skill"
        }
      ],
      "id": "operator-l4",
      "description": "賦值運算子用於給變數指定或更新值",
      "content": "4. 賦值運算子（=, +=, -=, *=, /=）教學\n賦值運算子用於給變數指定或更新值：\n\n= : 直接指派\n\n+= : 加後再指派\n\n-= : 減後再指派\n\n*= : 乘後再指派\n\n/= : 除後再指派\n\n```python\n# 經驗值系統\nxp = 0            # 直接指派\nxp += 50          # 累加經驗值\nprint(\"目前經驗值：\", xp)\n# 輸出：目前經驗值： 50\n\nxp *= 1.2         # 獲得經驗加成\nprint(\"加成後經驗：\", xp)\n# 輸出：加成後經驗： 60.0\n\nxp -= 20          # 使用技能耗費經驗\nprint(\"剩餘經驗：\", xp)\n# 輸出：剩餘經驗： 40.0\n\nxp /= 2           # 經驗減半（示例）\nprint(\"減半後經驗：\", xp)\n# 輸出：減半後經驗： 20.0\n\n```"
    }
  ],
  "__collections__": {}
}